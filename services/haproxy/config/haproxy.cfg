global
	# log /dev/log	local0
	# log /dev/log	local1 notice
	# chroot /var/lib/haproxy
	# stats socket /run/haproxy-master.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	tune.ssl.default-dh-param 2048

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode	http
	option	httplog
	option	dontlognull
    log                     global
    option                  dontlognull
    #option                  logasap
    option                  srvtcpka
    option                  log-separate-errors
    retries                 3
    timeout queue           2m
    timeout connect         10s
    timeout client          5m
    timeout server          5m
    timeout check           10s
    maxconn                 750
    # never fail on address resolution
    default-server init-addr last,libc,none

##################### HTTP Backends #########################
# resolvers internal
#    accepted_payload_size 8192
#    nameserver dns1      127.0.0.11:53
#    resolve_retries      3
#    timeout resolve      1s
#    timeout retry        1s
#    hold other           30s
#    hold refused         30s
#    hold nx              30s
#    hold timeout         30s
#    hold valid           10s
#    hold obsolete        30s

# resolvers mydns
#   parse-resolv-conf
#   hold valid 10s

frontend fe_ssh
	bind :::22 v4v6 ssl crt /live/tidu.giize.com/tls.pem

    mode tcp
    option tcplog
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq dstName:%[var(sess.dstName)] dstIP:%[var(sess.dstIP)] "

    # tcp-request content do-resolve(sess.dstIP,internal,ipv4) ssl_fc_sni
    # tcp-request content set-var(sess.dstName) ssl_fc_sni
    # default_backend ssh-all
    tcp-request content set-var(sess.dst) ssl_fc_sni
    use_backend %[ssl_fc_sni]

# backend ssh-all
#    mode tcp
#    tcp-request content set-dst var(sess.dstIP)
#    server ssh 0.0.0.0:22

backend ssh_git
    mode tcp
    server default git:22 check


backend ssh_host
    mode tcp
    server default host.docker.internal:22 check
##############################################################

#############################################################

frontend fe_http_default
 	bind :::80 v4v6
    tcp-request content accept if HTTP
    use_backend %[hdr(host),lower,map_end(/usr/local/etc/haproxy/http-domain2backend-map.txt)]

    default_backend be_http_redirect_https


##################### HTTP Backends #########################
backend be_knative_k8s_http
    server default host.docker.internal:80 check
    option forwardfor
    option http-use-htx

    # Strip off Proxy headers to prevent HTTpoxy (https://httpoxy.org/)
    http-request del-header Proxy

    http-request set-header Host %[req.hdr(host),lower]
    http-request set-header X-Forwarded-Host %[req.hdr(host),lower]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header Forwarded for=\"[%[src]]\";host=%[req.hdr(host),lower];proto=%[req.hdr(X-Forwarded-Proto)];proto-version=%[req.hdr(X-Forwarded-Proto-Version)]
#############################################################


#################### HTTPS Redirect #########################
backend be_http_redirect_https
    server fe_http_redirect_https localhost:10443 check


frontend fe_http_redirect_https
    bind localhost:10443
    http-request redirect scheme https unless { ssl_fc }
#############################################################


frontend fe_https_default
	bind :::443 v4v6

    mode tcp
    option tcplog
    # log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq ssl_fc_has_sni '%[ssl_fc_has_sni]' sni:'%[capture.req.hdr(0)]' ssl_fc_sni '%[ssl_fc_sni]' ssl_fc_protocol '%[ssl_fc_protocol]' ssl_bc '%[ssl_bc]' ssl_bc_alpn '%[ssl_bc_alpn]' ssl_bc_protocol '%[ssl_bc_protocol]' ssl_c_i_dn '%[ssl_c_i_dn()]' ssl_c_s_dn '%[ssl_c_s_dn()]' ssl_f_i_dn '%[ssl_f_i_dn()]' ssl_f_s_dn '%[ssl_f_s_dn]' ssl_fc_cipher '%[ssl_fc_cipher]' "


    tcp-request inspect-delay 5s
    tcp-request content capture req.ssl_sni len 25
    tcp-request content accept if { req.ssl_hello_type 1 }

    use_backend %[req.ssl_sni,lower,map_end(/usr/local/etc/haproxy/https-passthrough-domain2backend-map.txt)]

    default_backend be_default_https_passthrough


################ HTTPS Passthrough Backends ##################
# backend be_ca_https_passthrough
#     mode tcp
#     server default host.docker.internal:3000 check


backend be_k8s_https_passthrough
    mode tcp
    server fe_k8s_https_proxy localhost:10444 weight 10 send-proxy-v2-ssl-cn


backend be_default_https_passthrough
    mode tcp
    server fe_default_https_proxy localhost:10445 weight 10 send-proxy-v2-ssl-cn
##############################################################


################ HTTPS Proxy Frontends ##################
frontend fe_k8s_https_proxy
    # terminate ssl 
    bind localhost:10444 accept-proxy ssl strict-sni alpn h2,http/1.1 crt /live/k8s.tidu.giize.com/tls.pem

    option forwardfor
    option http-use-htx
    option http-ignore-probes

    # Strip off Proxy headers to prevent HTTpoxy (https://httpoxy.org/)
    http-request del-header Proxy

    http-request set-header Host %[req.hdr(host),lower]
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Host %[req.hdr(host),lower]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }

    # The line below caused problem with docker private registry. Why???
    http-request add-header Forwarded for=\"[%[src]]\";host=%[req.hdr(host),lower];proto=%[req.hdr(X-Forwarded-Proto)];proto-version=%[req.hdr(X-Forwarded-Proto-Version)]

    # Add hsts https://www.haproxy.com/blog/haproxy-and-http-strict-transport-security-hsts-header-in-http-redirects/
    # http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"

    default_backend be_k8s_https_proxied


frontend fe_default_https_proxy
    # terminate ssl 
    bind localhost:10445 accept-proxy ssl strict-sni alpn h2,http/1.1 crt /live/tidu.giize.com/tls.pem

    option forwardfor
    option http-use-htx
    option http-ignore-probes

    # Strip off Proxy headers to prevent HTTpoxy (https://httpoxy.org/)
    http-request del-header Proxy

    http-request set-header Host %[req.hdr(host),lower]
    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Host %[req.hdr(host),lower]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }

    # The line below caused problem with docker private registry. Why???
    http-request add-header Forwarded for=\"[%[src]]\";host=%[req.hdr(host),lower];proto=%[req.hdr(X-Forwarded-Proto)];proto-version=%[req.hdr(X-Forwarded-Proto-Version)]

    # Add hsts https://www.haproxy.com/blog/haproxy-and-http-strict-transport-security-hsts-header-in-http-redirects/
    # http-response set-header Strict-Transport-Security "max-age=16000000; includeSubDomains; preload;"

    use_backend %[hdr(host),lower,map_end(/usr/local/etc/haproxy/https-proxy-domain2backend-map.txt)]
    default_backend be_default_https_proxied
##############################################################


################ HTTPS Proxy SSL Proxied Backends ##################
backend be_default_https_proxied
    server default host.docker.internal:8080 check

backend be_k8s_https_proxied
    server default host.docker.internal:80 check

backend be_cr_https_proxied
    server default cr:80 check

backend be_git_https_proxied
    server default git:3000 check

backend be_plantuml_https_proxied
    server default plantuml:8080 check

# backend be_minio_https_proxied
#     server default minio check

# backend be_minio-console_https_proxied
#     server default minio-console check

######################################################################

#---------------------------------------------------------------------
#  stats page is hosted at different port
#---------------------------------------------------------------------
listen stats
  bind *:10000
  stats enable
  stats realm Haproxy\ Statistics
  stats uri /
  stats auth tidu:tidu
